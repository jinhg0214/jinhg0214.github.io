<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://jinhg0214.github.io/</id><title>Dukgukim</title><subtitle>Nothing Special.</subtitle> <updated>2025-02-12T11:54:50+09:00</updated> <author> <name>Dukgukim</name> <uri>https://jinhg0214.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://jinhg0214.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://jinhg0214.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator> <rights> © 2025 Dukgukim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>GitHub Action</title><link href="https://jinhg0214.github.io/posts/gitaction/" rel="alternate" type="text/html" title="GitHub Action" /><published>2025-02-12T10:52:00+09:00</published> <updated>2025-02-12T10:52:00+09:00</updated> <id>https://jinhg0214.github.io/posts/gitaction/</id> <content type="text/html" src="https://jinhg0214.github.io/posts/gitaction/" /> <author> <name>Dukgukim</name> </author> <category term="IT" /> <category term="Web" /> <summary>GitAction에 대한 사전 이해 없이 CI/CD를 구축하려니 모르는 개념이 너무 많아 한번 공부할겸 정리한 내용 1. 개요 GitHub 플랫폼에서 제공하는 빌드, 테스트 및 배포 파이프라인을 자동화할 수 있는 CI/CD(연속 통합 및 지속적인 업데이트) 플랫폼 CI(Continuous Integration) : 지속적 통합 추가, 변경된(push, pull req 등) 코드를 빌드하고 테스트하는 프로세스를 자동화 하는 것 이후 코드를 merge 코드 규칙 Lint를 잘 지켰는지, 제대로 동작하는 지 등 체크 CD(Continuous Delivery, Depl...</summary> </entry> <entry><title>백준 2665. 미로만들기</title><link href="https://jinhg0214.github.io/posts/bj-2665/" rel="alternate" type="text/html" title="백준 2665. 미로만들기" /><published>2025-02-10T16:33:00+09:00</published> <updated>2025-02-10T16:33:00+09:00</updated> <id>https://jinhg0214.github.io/posts/bj-2665/</id> <content type="text/html" src="https://jinhg0214.github.io/posts/bj-2665/" /> <author> <name>Dukgukim</name> </author> <category term="Algorithm" /> <category term="Problem Solving" /> <summary>백준 2665. 미로만들기 BFS 탐색인데 벽 부수기랑 유사함 1. 간단 설명 n*n의 방이 주어진다 검은 방은 이동 불가, 흰 방은 이동 가능 윗즐 맨 왼쪽방에서 출발하여, 아랫줄 맨 오른쪽 방으로 도달해야함 시작방에서 끝 방으로 도달할 수 없는데, 검은 방을 흰방으로 최소한으로 바꾸면서 도달하려한다 검읜 방에서 흰 방으로 바꾸어야할 최소의 수를 구하는 프로그램 작성 2. 예제 8 11100110 11010010 10011010 11101100 01000111 00110001 11011000 11000111 검은방은 0, 흰 방은 1임 (0,0)에서 (7,7)로 도달해야함 최수 2개를 바꿔야 가능. 여기선 (3,3)과 (6,7)을 1로 바꿔야 도달 가능 3. 알고리즘...</summary> </entry> <entry><title>백준 1654. 랜선 자르기</title><link href="https://jinhg0214.github.io/posts/bj-1654/" rel="alternate" type="text/html" title="백준 1654. 랜선 자르기" /><published>2025-02-05T19:48:40+09:00</published> <updated>2025-02-07T21:35:57+09:00</updated> <id>https://jinhg0214.github.io/posts/bj-1654/</id> <content type="text/html" src="https://jinhg0214.github.io/posts/bj-1654/" /> <author> <name>Dukgukim</name> </author> <category term="Algorithm" /> <category term="Problem Solving" /> <summary>랜선 자르기 이진 탐색 문제의 응용 버전, 파라메트릭 서치(매개 변수 탐색) 문제 1. 간단 설명 K개의 각각의 다른 길이를 가진 랜선이 있다 랜선을 모두 같은 길이로 잘라서 N개를 만들어야한다 가지고 있는 랜선 개수 K, 필요 랜선 개수 N이 주어지고 K 줄에 걸쳐 이미 가지고 있는 랜선의 길이가 센티미터 단위 정수로 주어짐 N개를 만들 수 있는 랜선의 최대 길이를 구하기 2. 예제 ex1) 4 11 802 743 457 539 4개의 랜선 802cm, 743cm, 457cm, 539cm가 있음 이를 적당히 잘라서 11개의 같은 길이를 가지는 랜선을 만들어야한다 각각 200cm씩 802cm에서 4개, 743cm에서 3개, 457cm 에서 2개, 539cm에서 2개 자...</summary> </entry> <entry><title>GitHub Action, upload-artifact v3 오류 해결법</title><link href="https://jinhg0214.github.io/posts/actionsv3/" rel="alternate" type="text/html" title="GitHub Action, upload-artifact v3 오류 해결법" /><published>2025-02-03T10:52:00+09:00</published> <updated>2025-02-07T21:35:57+09:00</updated> <id>https://jinhg0214.github.io/posts/actionsv3/</id> <content type="text/html" src="https://jinhg0214.github.io/posts/actionsv3/" /> <author> <name>Dukgukim</name> </author> <category term="IT" /> <category term="Web" /> <summary>1. 원인 깃 페이지를 관리하던 중, 2025년 1월 30일 이후로 글이 올라가지 않는 문제가 발생했다 깃허브의 CI/CD를 확인해보니 빌드에서 실패가 발생하는 것을 확인 Error: This request has been automatically failed because it uses a deprecated version of actions/upload-artifact: v3. Learn more: https://github.blog/changelog/2024-04-16-deprecation-notice-v3-of-the-artifact-actions/ 에러 로그를 보니 Github Actions 에서 actions/upload-artifact@v3 또는 actions/dow...</summary> </entry> <entry><title>DeepSeek-R1 로컬 환경에서 구동하기</title><link href="https://jinhg0214.github.io/posts/deepseekr1/" rel="alternate" type="text/html" title="DeepSeek-R1 로컬 환경에서 구동하기" /><published>2025-01-31T16:00:00+09:00</published> <updated>2025-02-07T21:35:57+09:00</updated> <id>https://jinhg0214.github.io/posts/deepseekr1/</id> <content type="text/html" src="https://jinhg0214.github.io/posts/deepseekr1/" /> <author> <name>Dukgukim</name> </author> <category term="IT" /> <category term="Ai" /> <summary>1월 말 전세계를 충격에 빠트릴만한 뉴스가 나왔다 바로 중국에서 ChatGPT를 따라잡을만한 AI를 개발했다는 것 미국의 제재로 사용 금지된 엔비디아 고사양 그래픽카드 대신, AMD를 개조해서 개발했다는 소식에 엔비디아 주가가 급락하기도 했다 1. 개요 DeepSeek(深度求索, 심도구색)는 중국 항주에 본사를 둔 인공지능 기업 ‘환팡퀀트(幻方量化)’ 소속 인공지능 연구 기업의 이름이자, 같은 회사에서 개발한 언어 모델이다. 오픈소스로 공개되어있어, 모든 사용자들이 코드에 접근 가능하고, 상대적으로 경량화 된 모델을 제공하여 속도가 빠르다 심지어 라즈베리파이에서 구동 하는 영상도 있다 ChatGPT와 차이점 DeepSeek의 개발 비용은 약 80억원으로, GPT-4와비교하면...</summary> </entry> </feed>
